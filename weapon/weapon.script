--local WEAPON_Z_POSITION = 0.09099999815225601
local WEAPON_Z_POSITION = 0.09099999815225601
--go.property("hero_weapon", false)
--go.property("level_weapon", false)
go.property("diff_position", vmath.vector3(0, 0, 0)) -- diff for character weapn
--go.property("deff_y", 0) -- diff for character weapn
go.property("weapon_id", hash("sword"))

local function disable_all_sprites()
	msg.post("#sword", "disable")
	msg.post("#sword2", "disable")
	msg.post("#axespinemodel", "disable")
	msg.post("#swordspinemodel", "disable")
	msg.post("#sword2spinemodel", "disable")
end

local function init_weapon(self)
	self.weapon_stats = {
		[hash("axe")] = { damage = 10, range = 30, firerate = 3, fire_anim="pistol_fire", url = msg.url("#axespinemodel") },
		[hash("sword")] = { damage = 10, range = 30, firerate = 3, fire_anim="pistol_fire", url = msg.url("#swordspinemodel") },
		[hash("sword2")] = { damage = 50, range = 15, firerate = 1,  fire_anim="shotgun_fire", url = msg.url("#sword2spinemodel") },
	}
end

function init(self)
	self.hit_animation = false
	init_weapon(self)
	disable_all_sprites()
--	local pos = go.get_position()
--	go.set_position(vmath.vector3(pos.x, pos.y, WEAPON_Z_POSITION))
	msg.post(self.weapon_stats[self.weapon_id].url, "enable")
--	msg.post(msg.url("#spinemodel"), "skin", hash("axe"))
--	go.set(msg.url("#spinemodel"), "skin", hash("axe"))
--	go.set_position(vmath.vector3(100, 100, 0))
	-- Add initialization code here
	-- Remove this function if not needed
end

function final(self)
	-- Add finalization code here
	-- Remove this function if not needed
end

function update(self, dt)
	-- Add update code here
	-- Remove this function if not needed
end

local function change_direction(self)
	local rotation = go.get_rotation(self.weapon_stats[self.weapon_id].url)
	local new_direction = 1
	if rotation.y == 0 then
		new_direction = -1
	end
	msg.post(msg.url(), "change_direction", {new_direction = new_direction})
end

local function anim_hit_done(self)
	spine.play_anim(self.weapon_stats[self.weapon_id].url, "idle", go.PLAYBACK_LOOP_FORWARD)
	self.hit_animation = false
	change_direction(self)
end

function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Remove this function if not needed
	if message_id == hash("hero_position") then
 		go.set_position(message.position + self.diff_position)
	elseif message_id == hash("change_direction") then
		local diff_property = go.get(msg.url(), "diff_position")
		print(66666, message, message.new_direction)
		if message.new_direction < 0 then
			local rotatio = vmath.quat_rotation_y(3.141592653);
			go.set_rotation(rotatio, self.weapon_stats[self.weapon_id].url)
			diff_property.x = math.abs(diff_property.x)
		else
			local rotatio = vmath.quat_rotation_y(0);
			go.set_rotation(rotatio, self.weapon_stats[self.weapon_id].url)
			diff_property.x = -1 * math.abs(diff_property.x)
		end

		go.set(msg.url(), "diff_position", diff_property)
	elseif message_id == hash("acceleration") then
		change_direction(self)
		if message.start == true then
			spine.play_anim(self.weapon_stats[self.weapon_id].url, "acceleration", go.PLAYBACK_NONE)
			spine.play_anim(self.weapon_stats[self.weapon_id].url, "acceleration", go.PLAYBACK_LOOP_FORWARD)
		else
			spine.play_anim(self.weapon_stats[self.weapon_id].url, "idle", go.PLAYBACK_LOOP_FORWARD)
		end
	elseif message_id == hash("hit") then
		if self.hit_animation == false then
			change_direction(self)
			self.hit_animation = true
			spine.play_anim(self.weapon_stats[self.weapon_id].url, "hit", go.PLAYBACK_NONE)
			spine.play_anim(self.weapon_stats[self.weapon_id].url, "hit", go.PLAYBACK_ONCE_FORWARD, {}, anim_hit_done)
		end
	end
end

function on_input(self, action_id, action)
	-- Add input-handling code here
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Remove this function if not needed
end
