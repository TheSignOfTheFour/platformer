--local WEAPON_Z_POSITION = 0.09099999815225601
local WEAPON_Z_POSITION = 0.09099999815225601
--go.property("hero_weapon", false)
--go.property("level_weapon", false)
go.property("diff_position", vmath.vector3(0, 0, 0)) -- diff for character weapn
--go.property("deff_y", 0) -- diff for character weapn
go.property("weapon_id", hash("sword"))

local function disable_all_sprites()
	msg.post("#sword", "disable")
	msg.post("#sword2", "disable")
	msg.post("#axespinemodel", "disable")
	msg.post("#swordspinemodel", "disable")
	msg.post("#sword2spinemodel", "disable")
end

local function init_weapon(self)
	self.weapon_stats = {
		[hash("axe")] = { damage = 10, range = 30, firerate = 3, fire_anim="pistol_fire", url = msg.url("#axespinemodel") },
		[hash("sword")] = { damage = 10, range = 30, firerate = 3, fire_anim="pistol_fire", url = msg.url("#swordspinemodel") },
		[hash("sword2")] = { damage = 50, range = 15, firerate = 1,  fire_anim="shotgun_fire", url = msg.url("#sword2spinemodel") },
	}
end

function init(self)
	init_weapon(self)
	disable_all_sprites()
--	local pos = go.get_position()
--	go.set_position(vmath.vector3(pos.x, pos.y, WEAPON_Z_POSITION))
	msg.post(self.weapon_stats[self.weapon_id].url, "enable")
--	msg.post(msg.url("#spinemodel"), "skin", hash("axe"))
--	go.set(msg.url("#spinemodel"), "skin", hash("axe"))
--	go.set_position(vmath.vector3(100, 100, 0))
	-- Add initialization code here
	-- Remove this function if not needed
end

function final(self)
	-- Add finalization code here
	-- Remove this function if not needed
end

function update(self, dt)
	-- Add update code here
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Remove this function if not needed
	if message_id == hash("hero_position") then
--		local pos = go.get_position()
--		local posz = pos.z
--		pos = message.position + self.diff_position
 		go.set_position(message.position + self.diff_position)
-- 		go.set_position(vmath.vector3(pos.x, pos.y, posz))
---- 		msg.post("weapon#script", "hero_position", {position = go.get_position()})
	elseif message_id == hash("change_direction") then
		local diff_property = go.get(msg.url(), "diff_position")
		if message.new_direction < 0 then
			local rotatio = vmath.quat_rotation_y(3.141592653);
			go.set_rotation(rotatio, self.weapon_stats[self.weapon_id].url)
--			go.set_rotation(rotatio, msg.url())

			diff_property.x = math.abs(diff_property.x)

--			local pos = go.get_position(self.weapon_stats[self.weapon_id].url)
--			print(5555, pos.z, self.weapon_stats[self.weapon_id].url)
--			go.set_position(vmath.vector3(pos.x, pos.y, WEAPON_Z_POSITION), self.weapon_stats[self.weapon_id].url)

--			local pos = go.get_position(msg.url())
--			print(5555, pos.z)
--			go.set_position(vmath.vector3(pos.x, pos.y, WEAPON_Z_POSITION), msg.url())
		else
			local rotatio = vmath.quat_rotation_y(0);
--			rotatio = vmath.quat_rotation_z(0);
			go.set_rotation(rotatio, self.weapon_stats[self.weapon_id].url)
--			go.set_rotation(rotatio, msg.url())

			diff_property.x = -1 * math.abs(diff_property.x)

--			local pos = go.get_position(self.weapon_stats[self.weapon_id].url)
--			print(44444, pos.z)
--			go.set_position(vmath.vector3(pos.x, pos.y, WEAPON_Z_POSITION), self.weapon_stats[self.weapon_id].url)

--			local pos = go.get_position(msg.url())
--			print(44444, pos.z)
--			go.set_position(vmath.vector3(pos.x, pos.y, WEAPON_Z_POSITION), msg.url())
		end

		go.set(msg.url(), "diff_position", diff_property)
--		sprite.set_hflip(self.weapon_stats[self.weapon_id].url, message.new_direction < 0) -- doesn't work for spine animation
	end
end

function on_input(self, action_id, action)
	-- Add input-handling code here
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Remove this function if not needed
end
